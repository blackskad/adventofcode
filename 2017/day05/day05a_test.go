package day05

import (
	"fmt"
	"testing"
)

func TestStep(t *testing.T) {
	fixtures := []struct {
		Input  []int
		PartB  bool
		Result int
	}{
		{[]int{0, 3, 0, 1, -3}, false, 5},
		{[]int{0, 3, 0, 1, -3}, true, 10},
	}

	for i, f := range fixtures {
		fmt.Println("Test case ", i)
		r := step(f.Input, f.PartB)
		if r != f.Result {
			t.Errorf("Error: expected %d steps, got %d", f.Result, r)
		}
	}
}

func BenchmarkStepMine(b *testing.B) {
	ints := []int{0, 2, 0, 0, -2, -2, -1, -4, -5, -6, 0, 1, -5, -3, -10, -8, -2, -13, -14, -15, -8, -5, -13, -16, -21, -3, -14, -23, -9, -11, -19, -29, -2, -20, -28, 1, -3, -35, 1, -20, -4, -37, -11, -27, -33, -43, -20, -5, -9, -22, -47, -5, -49, -13, -22, -2, -2, -51, -53, -22, -38, -16, -37, -30, -49, -48, -35, -5, -42, -21, -31, -61, -43, -31, -72, -35, -3, -31, -65, -78, 2, -17, -80, -10, -6, -68, -69, -44, -71, -78, -89, -19, -22, -28, -21, -7, -54, -63, -48, -70, -73, -52, -47, -49, -2, -91, -65, -76, -58, -47, -45, -21, -11, -112, -80, -93, -98, -41, -54, -105, -36, -102, -75, -102, -67, -100, -41, -56, -19, -90, -5, -66, -41, -3, -32, -95, -65, -44, -1, 1, -62, -7, -29, -61, -7, 1, -63, 0, -20, -58, -58, -7, -54, -80, -48, -51, -151, -141, -37, -122, -130, -132, -158, -117, -63, -103, -130, -116, -130, -63, -134, -131, -59, -30, -33, -38, -127, -31, -76, -35, -162, -132, -121, -31, -28, -2, -29, -148, -156, -168, 2, -33, -85, -25, -18, -167, -152, -22, -38, -136, -83, -46, -73, -139, -15, -185, -197, -125, -159, -80, -161, -158, -82, -36, -52, -210, -200, -90, -199, -70, -135, -195, -54, -156, -46, -74, -73, -221, -96, -37, -189, -27, -209, -30, -50, -4, -74, -15, -184, 2, -78, -33, -37, -99, -65, -196, -32, -36, -188, -62, -5, -244, -116, -150, -118, -124, -54, -28, -43, -208, -205, -95, -90, -129, -242, -70, -144, -64, -247, -170, -213, -40, -173, -90, -77, -139, -56, -70, -120, -9, -68, -78, -7, -123, -103, -173, -254, -249, -246, -139, -192, -92, -204, -71, -199, -56, -63, -231, -23, -115, -240, -51, -200, -184, -287, -98, -7, -81, -275, -262, -260, -32, -99, -28, -199, -160, -176, -210, -244, -162, -82, -35, -276, -71, -114, -222, -294, -28, -122, -110, -178, -264, -239, -104, -85, -11, -117, -15, -69, -275, -289, -212, 1, -296, -285, -9, -95, -149, -197, -152, -141, -148, -138, -173, -224, -297, -299, -53, -335, -36, -17, -291, -25, -211, -175, -104, -328, -58, -15, -198, -102, -122, -211, -74, -117, -205, -143, -353, -187, -323, -172, -133, -170, -41, -92, -84, -72, -352, -278, -164, -124, -175, -113, -175, -152, -160, -33, -126, -226, -237, -135, -156, -190, -378, -168, -271, -240, -111, -398, -91, -243, -336, -311, -368, -396, -202, -262, -18, -303, -363, -67, -36, -284, -404, -120, -97, -387, -26, -135, -112, -325, -82, -53, -307, -410, -276, -384, -64, -60, -412, -335, -356, -82, -134, -251, -408, -342, -9, -73, -27, -388, -434, -80, -231, -114, 0, -64, -325, -251, -153, -109, 1, -92, -167, -89, -454, -154, -13, -283, -231, -357, -244, -324, -134, -41, -380, -169, -247, -301, -297, -388, -304, -135, -403, -168, -314, -117, -281, -76, -473, -281, -322, -79, -39, -129, -432, -452, -183, -164, -76, -382, -306, -58, -126, -141, -4, -3, -201, -480, -443, -313, -361, -279, -250, -38, -1, -340, -138, -69, -462, -32, -68, -19, -31, -271, -86, -141, -331, -412, -29, -369, -518, -103, -502, -24, -67, -130, -247, -331, -535, -77, -305, -153, -44, -382, -309, -162, -430, -480, -25, -431, -78, -442, -549, -184, -523, -94, -380, -227, -526, -209, -508, -129, -36, -510, -310, -133, -145, -146, -244, -245, -541, -362, -7, -103, -565, -209, 2, -140, -51, -572, -28, -354, -525, -148, -79, -176, -34, -396, -162, -374, -448, -76, -87, -136, -584, -179, -230, -490, -361, -333, -328, -34, -524, -273, -195, -32, -520, -260, -506, -576, -422, -115, -65, -285, -314, -322, -146, -287, -251, -585, -326, -77, -250, -321, -334, -560, -455, -523, -90, -234, -343, -457, -395, -173, -560, -474, -118, -244, -263, -493, -597, -232, -237, -619, -372, -416, -142, -93, -546, -538, -198, -574, -250, -491, -168, -47, -247, -127, -641, -228, -192, -545, -543, -172, -220, -277, -647, -87, -198, -450, -247, -15, -406, -562, -335, -436, -665, -362, -211, -582, -178, -523, -232, -287, -635, -33, -666, -577, -54, -509, -271, -561, -491, -512, -212, -269, -473, -460, -587, -209, -538, -14, -303, -360, -275, -125, -373, -108, -31, -314, -639, -220, -52, -378, -398, -369, -594, -204, -423, -441, -447, -27, -495, -595, -352, -388, -127, -424, -609, -435, -626, -191, -46, -363, -15, -557, -433, -53, -680, -129, -462, -40, -598, -246, -468, -600, -351, -409, -89, -732, -178, -472, -335, -622, -563, -322, -261, -63, -671, -291, -591, -518, -373, -615, -727, -553, -166, -108, -723, -77, -736, -364, -765, -49, -41, -99, -134, -684, -281, -530, -545, -372, -570, -48, -288, -583, -421, -601, -162, -176, -414, -735, -195, -786, -656, -488, -744, -256, -345, -152, -44, -29, 1, -582, -30, -351, -379, -23, -48, -737, -293, -525, -73, -79, -531, -775, -706, -59, -74, -805, -311, -544, -33, -603, -454, -700, -506, -489, -617, -485, -267, -794, -13, -707, -557, -368, -730, -696, -728, -167, -413, -639, -705, -391, -11, -195, -416, -788, -295, -768, -192, -2, -771, -675, -687, -198, -568, -663, -302, -732, -265, -796, -370, -18, -579, -771, -349, -365, -214, -598, -314, -752, -315, -815, -487, -511, -126, -6, -146, -353, -787, -204, -330, -517, -456, -805, -4, -500, -150, -242, -833, -804, -663, -554, -41, -607, -121, -762, -892, -249, -405, -403, -255, -457, -613, -91, -157, -890, -631, -908, -544, -487, -813, -541, -108, -147, -702, -301, -430, -66, -492, -902, -284, -464, -784, -312, -762, -588, -17, -809, -436, -483, -16, -410, -180, -568, -37, -687, -444, -619, -211, -386, -673, -600, -155, -558, -849, -37, -717, -867, -236, -98, -165, -579, -677, -691, -602, -878, -555, -893, -773, -395, -942, -661, -850, -881, -485, -312, -689, -258, -899, -120, -227, -349, -467, -404, -45, -919, -329, -365, -22, -462, -632, -498, -873, -288, -901, -655, -321, -922, -882, -416, -946, -320, -5, -57, -352, -711, -197, -705, -737, -439, -39, -252, -1002, -617, -373, -605, -887, -451, -824, -455, -66, -619, -18, -404, -64, -736, -44, -381, -447, -567, -877, -411, -216, -635, -598, -419, -577, -142, -189, -917, -692, -153, -2, -116, -172, -423, -886, -454, -492, -491, -656, -832, -1036, -468, -23, -709, -292, -668, -454, -478, -302, -182, -677, -904, -648, -513, -901, -331, -750, -445, -758, -842, -372, -471, -109, -239, -704, -817, -340, -591, -40}

	jumps := make([]int, len(ints))
	for n := 0; n < b.N; n++ {
		copy(jumps, ints)
		step(jumps, true)
	}
}

func BenchmarkStepGilj(b *testing.B) {
	ints := []int{0, 1, 0, 0, 1, -3, 0, 0, 2, -2, -6, -3, 2, -5, -6, -3, -3, 0, -8, -12, 1, -9, -12, -9, 0, -7, -17, -6, -18, -7, -6, -21, -28, -14, -23, -14, -17, -5, -35, -17, -26, -14, 1, -27, -19, -40, -32, -44, 2, -14, -15, -12, -35, 0, -49, -12, -7, -46, -47, -32, -33, -47, -7, -62, -20, -35, -4, -35, -8, -3, -61, -38, -63, -27, -33, -57, -48, -66, -68, -11, -61, -50, -34, -31, -36, -79, -49, -71, 1, -34, -65, -61, -91, -12, -21, -82, -85, -51, -89, 0, -83, -53, -44, -7, 1, -19, -39, -27, -94, -36, -31, -35, -97, -45, -90, -15, -106, -30, -79, -18, -25, -105, -30, -63, -109, -32, -91, -96, -87, -121, -116, -103, -71, -1, -113, -10, -47, -109, -107, -38, -66, -26, -8, -38, -31, -129, -42, -91, -89, -107, -125, -75, -118, -81, -45, -111, -27, -63, -106, -110, -64, -63, -80, -44, -33, -130, -55, -90, -144, -15, -132, -122, -155, -122, -94, -159, -5, -89, -6, -97, -129, -159, -15, -44, -156, -124, -113, -154, -95, -96, -29, -121, -30, -73, -118, -57, -76, -141, -138, -108, -185, -56, -136, -161, -138, -192, 2, -126, -12, -39, -60, -125, -149, -193, -146, -116, -101, -16, -207, -122, -92, -204, -42, -112, -28, -93, -96, -57, -136, -19, -36, -107, -170, -19, -20, -96, -229, -59, -172, -58, -89, -31, -57, -223, -37, -189, -43, -135, -90, -150, -22, -152, -243, -37, -231, -112, -57, -168, -30, -77, -162, -181, -176, -202, -138, -206, -183, -190, -257, -181, -47, -23, -248, -114, -98, -77, -143, -168, -166, -30, -155, -237, -51, -113, -243, -41, -142, -231, -139, -20, -190, -262, -142, -238, -200, -270, -113, -35, -296, -146, -205, -129, -198, -68, -139, -56, -196, -133, -16, -229, -258, -91, -63, -249, -274, -156, -273, -182, -166, -115, -154, -296, -115, -89, -120, -201, -44, -287, -8, 1, -260, -297, -282, -114, -323, -326, -166, -241, -109, -21, -236, -280, -19, -80, -77, -271, -292, -340, -300, -206, -308, -99, -156, -277, -245, -132, -56, -172, -53, -271, -32, -5, -235, -329, -1, -150, -247, -268, -133, -341, -221, -2, -43, -229, -190, -337, -40, -71, -72, -149, -25, -253, -44, -113, -164, -370, -284, -235, -9, -234, -291, 1, -152, -302, -393, -47, -289, -75, -140, -349, -140, -353, -298, -27, -292, -380, -55, -62, -208, -221, -41, -316, -411, -367, -220, -248, -59, -177, -372, -55, -241, -240, -140, -315, -297, -42, -118, -141, -70, -183, -153, -30, -63, -306, -110, -8, -356, -80, -314, -323, -41, -176, -165, -41, -230, -132, -222, -2, -404, -38, -130, 2, -16, -141, -136, -336, -245, -6, -348, -172, -267, -208, -291, -285, -67, -219, -216, -136, -325, -27, -382, -242, -50, -284, -149, -454, -336, -346, -293, -402, -76, -324, -219, -336, -24, -446, -123, -185, -196, -295, -173, -400, -137, -414, -14, -104, -62, -252, -17, -398, -490, -440, -89, -347, -101, -142, -228, -301, -396, -320, -52, -508, -122, -436, -311, -344, -240, -434, -220, -197, -31, -295, -44, -452, -269, -430, -373, -409, -438, -365, -13, -241, -418, -20, -24, -141, -1, -148, -307, -63, -423, -254, -8, -438, -326, -19, -135, -109, -394, 2, -398, -273, -158, -453, -346, -86, -431, -536, -549, -379, -483, -85, -476, -483, -104, -87, -462, -249, -540, -164, -360, -100, -238, -45, -390, -59, -156, -248, -257, -150, -164, -160, -545, -520, -364, -384, -237, -456, -28, -366, -147, 0, -303, -583, -420, -370, -299, -154, -380, -188, -491, -258, -598, -429, -349, -333, -569, -4, -556, -421, -182, -441, -407, -542, -364, -370, -384, 1, -529, -45, -319, -395, -279, -160, -575, -193, -25, -565, -548, -445, -266, -304, -361, -348, -303, -159, -39, -75, -437, -608, -622, -556, -108, -343, -283, -68, -632, -393, -68, -140, -126, -531, -87, -519, -334, -56, -70, -275, -247, -370, -439, -118, -497, -630, -594, -612, -541, -161, -646, -397, -100, -284, -313, 0, -59, -200, -601, -663, -529, -676, -610, -7, -228, -50, -494, -382, -250, -306, -274, -163, -110, -375, -124, -237, -98, -645, -692, -495, -593, -647, -178, -531, -336, -697, -646, -671, -633, -542, -461, -200, -658, -525, -389, -643, -258, -329, -656, -400, -692, -557, -506, -594, -67, -623, -113, -459, -211, -713, -115, -602, -131, -181, -30, -227, -53, -719, -631, -641, -434, -552, -716, -368, -19, -439, -443, -552, -85, -79, -449, -254, -620, -474, -121, -210, -285, -608, -456, -513, -496, -13, -418, -399, -437, -258, -15, -623, -178, -336, -379, -721, -299, -729, -742, -64, -13, -438, -603, -666, -278, -767, -200, -686, -497, -256, -541, -491, -360, -615, -326, -682, -759, -524, -580, -323, -578, -793, -478, -107, -440, -657, -790, -605, -21, -163, -392, -560, -336, -430, -613, -182, -15, -782, -607, -281, -269, -25, -699, -89, -593, -280, -269, -438, -103, -359, -387, -157, -747, -619, -176, -772, -500, -735, -691, -797, -612, -573, -36, -617, -630, -357, -718, -210, -48, -185, -20, -556, -206, -722, -559, -416, -578, -745, -564, -273, -62, -300, -218, -711, -744, -805, -277, -522, -346, -280, -762, -438, -381, -379, -198, -737, -555, -466, -218, -511, -334, -353, -259, -225, -675, -350, -585, -647, -52, -395, -324, -106, -826, -279, -81, -396, -611, -312, -529, -291, -129, -594, -437, -188, -649, -820, -237, -673, -6, -387, -195, -503, -350, -83, -88, -626, -30, -313, -13, -633, -403, -319, -832, -185, -146, -839, -9, -557, -799, -841, -700, -465, -669, -769, -235, -849, -863, -819, -76, -912, -931, -909, -762, -607, -522, -64, -769, -377, -133, -414, -772, -206, -746, -730, -393, -901, -72, -33, -811, -372, -298, -835, -637, -302, -481, -958, -878, -867, -25, -260, -448, -21, -930, -903, -581, -547, -664, -843, -140, -337, -383, -513, -368, -221, -474, -169, -673, -728, -266, -862, -753, -815, -647, -106, -15, -728, -912, -147, -828, -6, -694, -434, -737, -335, -183, -732, -841, -364, -155, -116, -966, -822, -65, -22, -853, -208, -326, -826, -472, -491, -436, -771, -1009, -98, -401, -915, -275, -574, -313, -884, -648, -935, -94, -326, -553, -744, -723, -782, -719, -175, -868, -190, -153, -48, -218, -414, -721, -715, -995, -991, -575, -264, -70, -366, -381, -130, -409, -817, -258, -1028, -552, -878, -449, -138, -900, -45, -119, -677, -844, -869, -985, -1019, -60, -649, -915, -93, -1053, -121, -631, -156, -332, -193}

	jumps := make([]int, len(ints))
	for n := 0; n < b.N; n++ {
		copy(jumps, ints)
		step(jumps, true)
	}
}

func BenchmarkStepDuts(b *testing.B) {
	ints := []int{0, 2, 2, -2, -2, -2, 1, 2, 2, -1, -4, -8, -7, -11, 0, -13, -8, -7, -13, -11, -15, -4, -10, -10, -22, -22, -1, -9, 1, 2, -23, -4, -31, -3, 2, -34, -28, -28, -16, -1, -34, -13, -25, 1, -14, -40, -11, -32, -25, -17, -43, -23, -3, -52, -31, -8, -15, -48, -13, -56, -37, -24, -25, -47, -38, 0, -35, -65, -63, -40, -18, -55, -11, -8, -18, -53, -39, -20, 0, -6, -75, -22, -36, -71, -61, -74, -11, -14, -35, -54, -41, -59, -51, -45, -62, -53, -8, -26, -22, -16, -66, -87, -11, -59, -9, -44, -73, -76, -3, -78, -4, -45, -10, -38, -20, -102, -114, -44, -21, -111, -118, 0, -80, -65, -28, -51, -95, -42, -31, -41, -98, -39, -89, -116, -115, -30, -68, -52, -21, -17, -92, -136, -24, -16, -13, -110, -10, -44, 1, -89, -110, -99, -4, -106, -35, -7, -152, -147, -38, -17, -44, -148, -144, -48, -78, -154, -141, -23, -145, -55, -87, -97, -20, -66, -172, -82, -23, -23, -145, -37, -103, -138, -111, -105, -148, -67, -163, -59, -127, -130, -24, -102, -153, -149, -58, -33, -37, -28, -75, -103, -10, 1, -36, -130, -59, -70, -76, -181, -196, -165, -131, -71, -142, -183, -65, -55, -50, -112, -153, -59, -35, -198, -175, -197, -89, -197, -99, -52, -187, -55, -158, -117, -164, -205, -91, -68, -126, -158, -172, -217, -111, -106, -42, -135, -82, -213, -22, -1, -238, -204, -77, -123, -174, -29, -30, -90, -98, -5, -30, -52, -150, -155, -23, -14, -102, -47, -215, -112, -51, -2, 0, -62, -138, -255, -227, -17, -114, -34, -28, -139, -226, -258, -18, 0, -24, -161, -170, -12, -25, -12, -122, -238, -249, -81, -267, -236, -145, -242, -124, -78, -122, -141, -135, -9, -195, -98, -269, -221, -154, -106, -247, -88, -221, -9, -97, -207, -61, -102, -130, -54, -112, -61, -65, -82, -35, -150, -114, -180, -314, -317, -305, -28, -305, -294, -90, -133, -11, -1, -108, -1, -268, -257, -117, -245, -94, -313, -293, -174, -312, -61, -205, -3, -199, -95, -323, -34, -176, -241, -89, -346, -208, -270, -77, -253, -86, -167, -318, -70, -258, -76, -203, -91, -62, -329, -156, -235, -239, -191, -119, -285, -128, -155, -82, -36, -351, -373, -8, -36, -132, -183, -311, -274, -111, -175, -193, -72, -340, -64, -26, -378, -202, -194, -188, -169, -71, -197, -344, -193, -6, -63, -368, -313, -376, -42, -241, -50, -64, -354, -338, -177, -154, -420, -418, -349, -383, -340, -177, -227, -332, -145, -402, -66, -290, -274, -287, -68, -91, -49, -312, -106, -264, -173, -362, -252, -138, -218, -211, -39, -271, -261, -306, -372, -391, -408, -108, -308, -418, -395, -413, -208, -13, -41, -249, -297, -21, -274, -440, -205, -272, -371, -155, -357, -34, -97, -121, -221, -173, -364, -168, -83, -317, -414, -427, -90, -216, -91, -306, -467, -366, -486, -461, -34, -327, -474, -164, -160, -410, -366, -467, -206, -435, -167, -326, -423, -241, -45, -18, -59, -498, -483, -380, -431, -256, -254, -415, -18, -461, -223, -152, -179, -8, -169, -41, -452, -302, -172, -249, -5, -40, -97, -39, -492, -40, -460, -276, -442, -413, -220, -376, -389, -446, -133, -228, -364, -215, -133, -304, -234, -275, -463, -267, -147, -162, -227, -532, -216, -479, -61, -409, -376, -389, -283, -332, -97, -66, -486, -223, -522, -359, -340, -211, -401, -98, -249, -511, -238, -72, -473, -132, -450, -321, -455, -451, -140, -495, -212, -235, -213, -22, -111, -236, -390, -104, -230, -569, -45, -43, -264, -561, -552, -32, -403, -17, -288, -255, -436, -363, -495, -19, -358, -250, -59, -172, -77, -558, -211, -555, -65, -419, -282, -472, -72, -462, -276, -508, -489, -184, -486, -500, -143, -627, -506, -84, -368, -355, -467, -515, -415, -314, -386, -114, -319, -237, -113, -611, -17, -532, -181, -568, -132, -178, -276, -258, -384, -295, -208, -471, -622, -173, -531, -192, -231, -338, -427, -416, -591, -112, -511, -538, -357, -189, -186, -100, -458, -331, -85, -294, -375, -206, -377, -92, -504, -558, -26, -73, -103, -455, -397, -164, -683, -615, -321, -310, -76, -576, -291, -523, -163, -452, -236, -488, -588, -24, -52, -673, -176, -282, -642, -668, -517, -575, -173, -517, -565, -385, -202, -587, -519, -694, -493, -181, -241, -630, -597, -377, -560, -646, -100, -544, -135, -695, -460, -621, -97, -376, -511, -413, -613, -238, -160, -141, -329, -682, -664, -439, -730, -646, -266, -477, -233, -722, -687, -605, -483, -648, -685, -735, -739, -630, -644, -498, -652, -493, -508, -108, -32, -620, -185, -422, -187, -112, -263, -568, -599, -751, -768, -640, -440, -451, -760, -156, -425, -662, -764, -503, -521, -140, -425, -72, -242, -403, -778, -689, -693, -541, -674, -93, -545, -601, -730, -305, -743, -563, -315, -637, -126, -260, -463, -309, -538, -59, -368, -382, -355, -414, -97, -93, -475, -445, -319, -783, -411, -338, -480, -755, -149, -821, -813, -229, -116, -488, -741, -669, -442, -627, -403, -129, -829, -664, -357, -686, -835, -172, -80, -367, -789, -573, -199, -795, -221, -177, -543, -117, -651, -382, -731, -842, -125, -397, -328, -69, -388, -381, 1, -737, -199, -181, -264, -577, -63, -616, -333, -413, -616, -189, -315, -237, -608, -497, -348, -285, -863, -97, -745, -716, -666, -165, -522, -631, -438, -639, -443, -122, -521, -48, -501, -895, -205, -57, -576, -644, -442, -143, -215, -661, -749, -247, -298, -387, -601, -525, -383, -9, -64, -416, -423, -522, -631, -890, -867, -649, -525, -228, -544, -54, -878, -277, -924, -838, -885, -477, -256, -330, -301, -815, -722, -646, -677, -70, -917, -126, -832, -479, -849, -591, -66, -260, -524, -603, -86, -397, -63, -299, -417, -375, -909, -489, -872, -930, -638, -280, -440, -788, -818, -398, -765, -229, -346, -864, -155, -57, -686, -850, -84, -783, -191, -923, -740, -454, -118, -807, -662, -859, -99, -139, -272, -640, -166, -935, -805, -351, -413, -467, -535, -377, -97, -204, -262, -4, -704, -516, -459, -702, -718, -241, -534, -318, -955, -519, -675, -766, -671, -843, -861, -214, -4, -828, -638, -833, -953, -521, -17, -87, -393, -951, -17, -529, -49, -299, -673, -119, -185, -601, -187, -399, -646, -812, -627, -121, -535, -155, -601, -196, -365, -366, -409, -596, -803, -508, -988, -529, -925}

	jumps := make([]int, len(ints))
	for n := 0; n < b.N; n++ {
		copy(jumps, ints)
		step(jumps, true)
	}
}
